@charset 'utf-8';


/* 
    선택자 배치 순서: 
    제일 상단 tag, 그 아래에 있는 class, id는 문서 순서 배치와 동일한 위치에 위치시킴.
*/



/* width, heigth, 좌표같은 것은 케스케이딩 되지 않는다. */


html {
    
    font-size: 16px;
    font-family: 'Noto Sans KR', sans-serif;
    color: white;
}

body {
    position: relative;
    
    background-color: black;


}


a {
    text-decoration: none;
    color: white;
    
}

video {

    z-index: -3;

}





/* nav0 (첫번째 메뉴) ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ */

.nav0 {
    position: absolute;   /* 이유는 모르겠는데 absolute랑 flex 같은 곳에 쓰면 정상작동 안 한다. 그래서 div로 내림 */
    width: 100%;          /* 곰곰히 생각해보니 flex는 바로 하위 태그들을 하나하나의 덩어리로 보기 때문이였다.  */
                          /* 그니까. nav0에 flex 선언하면 아래 하위 div 하나만 flex-items이 되기 때문에 정렬이 안 됬던것 */
                          /* 결론은 flex는 정렬하고픈 것 바로 위에서 선언해야한다. */
                          
    height: 3em;
    top: 0;
    left: 0;
    

    background-color: darkgray;
    border-bottom: 1px solid gray ;
    



}


.nav0-div {

    display: flex;

    height: 100%;
    width: 100%;
    max-width: 1000px;
    
    justify-content: space-between;
    align-items: center;
  
    margin: auto;
   
    
   
    
}

/* .t {
    color: black;
} */




/* nav1 (두번째 메뉴)  ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ */

.nav1{
    position: absolute;
    width: 100%;
    height: 3em;
    top: 0;
    left: 0;
    /* background-color: aqua; */
    
    top: 3em;       /* 이렇게 해도 되나? */
    border-bottom: 1px solid gray ;
}

.nav1-div {
    display: flex;

    height: 100%;
    width: 100%;
    max-width: 1000px;

    align-items: center;
    justify-content: right;

    margin: auto;
} 

.nav1-div-productA {
    
    margin-right: auto;

}

.nav1-div-a {
    margin-left: 1em;
}

.nav1-makeFixed {
    position: fixed;
    top: 0;
    left: 0;

}



/* section0  ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ */


.stickyElement {
    position : fixed;  
    display: none;
    opacity: 0;
   
}

.section0-canvasDiv {
    z-index: -5;
    opacity: 1;
}





.section0-canvas {
    /* background-color: darkgreen; */
   
}


#show-section0 .stickyElement {
    display: block;
}




.section0 {

    /* section0 영역에 nav 영역이 가려져서 a링크 안 눌려지더라. */
    
}

.section0 .stickyElement {

    width: 100%;
    text-align: center;

}

.text {
    font-size: 3rem;
}

.textA {
    
    /* opacity: 0;   */
    /* 
        왜.stickyElement에 씹힐까? .stickyElement가 우선순위가 더 높기 때문으로 추측되는데  
        이건 진짜 모르겠다.

        HTML [nav - div - p] 순서에서 
        div에 class="textA"를 선언하면 씹히지 않는다
        p에 class="textA"를 선언하면 씹힌다. 

        생각해보니깐. 상위 태그가 opacity = 0 이면, 당연히 하위태그는 기본값 1일텐데
        사라지는 걸 보니. 상위태그 opacity에 지배 받는 게 당연하네.
    */
}


/* section1  ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ */


.section1 {
    /* display: none; */
    /* background-color: aliceblue; */
}

/* video ---------------------  */

.seciont1-videoDiv {
    position: fixed;
    width: 100%;
    height: 100%;

    z-index: -1;
    opacity: 1;
}

#show-section1 .seciont1-videoDiv {

    
    display: block;
    
    top: 0;
    left: 0;
    opacity: 1;
}

/* p -------------------- */

.section1-pDiv{


}

.section1-div-p{
    font-size: 3rem;
    line-height: 3em;

}



/* footer  ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ */


.copyleft {
    position: absolute;  /* 상위가 다 static 포지션이면 창 테두리 기준으로 top, bottom, left, right가 정해지더라. */
    
    display: flex;
    bottom: 0;
    background-color: darkgray;
    width: 100%;
    height: 3.5em;    
    
    justify-content: center;     /* 행 정렬 */
    align-items: center;         /* 수직 정렬 */
  
    
}


